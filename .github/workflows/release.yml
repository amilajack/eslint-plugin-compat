name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      dryRun:
        description: "Do a dry run to preview instead of a real release"
        required: true
        default: "true"

jobs:
  authorize:
    name: Authorize
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: ${{ github.actor }} permission check to do a release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/collaborators/${{ github.actor }}
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [authorize]
    if: always() && (needs.authorize.result == 'success' || needs.authorize.result == 'skipped')

    steps:
      # Wait for tests to complete successfully before releasing
      - name: Wait for Test workflow to succeed
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const sha = context.sha;
            
            // Wait for test workflow checks to complete
            let attempts = 0;
            const maxAttempts = 60; // 10 minutes max wait
            
            while (attempts < maxAttempts) {
              const { data: checks } = await github.rest.checks.listForRef({
                owner,
                repo,
                ref: sha,
              });
              
              const testChecks = checks.check_runs.filter(check => 
                check.name.startsWith('test (') && check.name.endsWith(')')
              );
              
              if (testChecks.length === 0) {
                console.log('No test checks found yet, waiting...');
              } else {
                const allCompleted = testChecks.every(check => check.status === 'completed');
                const allSucceeded = testChecks.every(check => check.conclusion === 'success');
                
                if (allCompleted) {
                  if (allSucceeded) {
                    console.log('All tests passed successfully!');
                    break;
                  } else {
                    core.setFailed('Tests failed - cannot proceed with release');
                    return;
                  }
                }
                console.log(`Waiting for tests to complete... (${testChecks.filter(c => c.status === 'completed').length}/${testChecks.length})`);
              }
              
              await new Promise(resolve => setTimeout(resolve, 10000)); // Wait 10 seconds
              attempts++;
            }
            
            if (attempts >= maxAttempts) {
              core.setFailed('Timeout waiting for tests to complete');
            }

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Release --dry-run # Uses release.config.js
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dryRun == 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release --dry-run

      - name: Release # Uses release.config.js
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.dryRun == 'false')}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
